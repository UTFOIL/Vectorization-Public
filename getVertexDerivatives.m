function [vertex_derivatives, std_across_kernels, kernel_maxs_by_scale, mean_across_kernels] ...
                                 = getVertexDerivatives(original_space_subscripts, vertex_scale_subscripts, best_resolution_allowed, ...
                                   number_of_scales, lumen_radius_in_microns_range, scales_per_octave,      ...
                                   size_of_image, pixels_per_radius_range, vessel_wall_thickness_in_pixels, ...
                                   vertex_radii, vertex_set_string, microns_per_voxel,  ...
                                   pixels_per_sigma_PSF, path_to_original_data, padding_size, apothem_per_radius, ...
                                   matching_kernel_string, vessel_wall_thickness_in_microns, start_time)

    previous_octave = 0 ;
    
    std_across_kernels = zeros(size(original_space_subscripts,1),1);
    mean_across_kernels = zeros(size(original_space_subscripts,1),1);
    vertex_derivatives = zeros(size(original_space_subscripts,1),9); %dy dx dz dyy dxx dzz dyx dyz dxz

            
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     
    s_subscript_range = min(round(vertex_scale_subscripts(:))):max(round(vertex_scale_subscripts(:)));  

    kernel_maxs_by_scale = zeros(1,numel(s_subscript_range));
    
    for s_subscript = s_subscript_range

        disp(['        - Running Scale Index: ', num2str(s_subscript), ' out of ', num2str(numel(lumen_radius_in_microns_range)), ' for ', vertex_set_string, ' verticies']);

        scale_time = tic;

        radius_of_lumen_in_microns = lumen_radius_in_microns_range(s_subscript);

        if ~exist('gaussian_to_ideal_ratio','var')
            gaussian_to_ideal_ratio = 1;
        end

        if ~exist('spherical_to_annular_ratio','var')
            spherical_to_annular_ratio = 0.5;
        end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        current_octave = ceil( s_subscript / scales_per_octave / 3 );

        if current_octave > previous_octave

            previous_octave = current_octave ;

            largest_scale_at_current_octave ...
                                        = min( number_of_scales, ceil( current_octave * scales_per_octave * 3 ));

            resolutions_at_scale = min( microns_per_voxel / lumen_radius_in_microns_range( s_subscript ), best_resolution_allowed * ones( size( microns_per_voxel ))); % unitless um/um

            resolution_factors = round( best_resolution_allowed ./ resolutions_at_scale );

            largest_pixels_per_radius_at_octave = pixels_per_radius_range( largest_scale_at_current_octave, : ) ./ resolution_factors ;

            pixels_per_sigma_PSF_at_scale = pixels_per_sigma_PSF ./ resolution_factors ;    

            microns_per_pixel_at_scale = microns_per_voxel .* resolution_factors ;

            chunk_overlap_vector = [0, 0, 0];

            [ y_reading_starts, x_reading_starts, z_reading_starts,         ...
              y_reading_counts, x_reading_counts, z_reading_counts,         ...
              ~, ~, ~, ~, ~, ~, ~, ~, ~,                           ]        ...
                    = get_starts_and_counts_V200( [1, 1, 1],                ...
                                                  chunk_overlap_vector,     ...
                                                  size_of_image,            ...
                                                  resolution_factors        );

            reading_counts  = [ y_reading_counts, ...
                                x_reading_counts, ...
                                z_reading_counts  ];

            % Read original image chunk and interpolate it to downsample at higher octaves
            orig   = double(h52mat( path_to_original_data,                         ...
                                  [ y_reading_starts,   ...
                                    x_reading_starts,   ...
                                    z_reading_starts ], ...
                                1 + floor(( reading_counts - 1 ) ./ resolution_factors ),  ...
                                resolution_factors                     )); 

            vertex_space_subscripts = round((original_space_subscripts - 1) ./ resolution_factors) + padding_size + 1;

            orig = padarray(orig,padding_size,'replicate','both');

        end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

        matching_kernel_image = get_filter_kernel( apothem_per_radius, matching_kernel_string, radius_of_lumen_in_microns,   ...
                                                   vessel_wall_thickness_in_microns, microns_per_pixel_at_scale,  ...
                                                   pixels_per_sigma_PSF_at_scale, gaussian_to_ideal_ratio,        ...
                                                   spherical_to_annular_ratio                            );
                                               
        kernel_maxs_by_scale(s_subscript) = max(matching_kernel_image(:));

        cutout_size = size(matching_kernel_image);
        cutout_apothem = (cutout_size - 1) / 2;

        subscript_range_y = -cutout_apothem(1):cutout_apothem(1);
        subscript_range_x = -cutout_apothem(2):cutout_apothem(2);
        subscript_range_z = -cutout_apothem(3):cutout_apothem(3);

        for i = 1:numel(vertex_scale_subscripts)
            if round(vertex_scale_subscripts(i)) ~= s_subscript
               continue;
            end
                         
            mean_across_kernels(i) = mean(orig(vertex_space_subscripts(i,1) + subscript_range_y,  ...
                                               vertex_space_subscripts(i,2) + subscript_range_x,  ...
                                               vertex_space_subscripts(i,3) + subscript_range_z)  ...
                                          .* matching_kernel_image,                          'all');

            std_across_kernels(i) = sqrt(mean((orig(vertex_space_subscripts(i,1) + subscript_range_y,...
                                                    vertex_space_subscripts(i,2) + subscript_range_x,...
                                                    vertex_space_subscripts(i,3) + subscript_range_z)...
                                                    - mean_across_kernels(i)).^2                         ...
                                               .* matching_kernel_image,                        'all')); 
                                           
            
                                           
            %dy
            vertex_derivatives(i,1)                       ...
                = sum((   orig(vertex_space_subscripts(i,1) + subscript_range_y + 1,  ...
                               vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                               vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         -orig(vertex_space_subscripts(i,1) + subscript_range_y - 1,  ...
                               vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                               vertex_space_subscripts(i,3) + subscript_range_z    )) ...
                       .* matching_kernel_image ./ microns_per_voxel(1),        'all' );

            %dx
            vertex_derivatives(i,2)                       ...
                = sum((   orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                               vertex_space_subscripts(i,2) + subscript_range_x + 1,  ...
                               vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         -orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                               vertex_space_subscripts(i,2) + subscript_range_x - 1,  ...
                               vertex_space_subscripts(i,3) + subscript_range_z    )) ...
                       .* matching_kernel_image ./ microns_per_voxel(2),        'all' );

            %dz
            vertex_derivatives(i,3)                       ...
                = sum((   orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                               vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                               vertex_space_subscripts(i,3) + subscript_range_z + 1)  ...
                         -orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                               vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                               vertex_space_subscripts(i,3) + subscript_range_z - 1)) ...
                       .* matching_kernel_image ./ microns_per_voxel(3),        'all' );

            %dyy
            vertex_derivatives(i,4)                           ...
                = sum((       orig(vertex_space_subscripts(i,1) + subscript_range_y + 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         - 2.*orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         +    orig(vertex_space_subscripts(i,1) + subscript_range_y - 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )) ...
                       .* matching_kernel_image ./ (microns_per_voxel(1)^2),         'all');

            %dxx
            vertex_derivatives(i,5)                           ...
                = sum((       orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x + 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         - 2.*orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         +    orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x - 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )) ...
                       .* matching_kernel_image ./ (microns_per_voxel(2)^2),         'all');

            %dzz
            vertex_derivatives(i,6)                           ...
                = sum((       orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z + 1)  ...
                         - 2.*orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         +    orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z - 1)) ...
                       .* matching_kernel_image ./ (microns_per_voxel(3)^2),         'all');

            %dyx
            vertex_derivatives(i,7)                           ...
                = sum((       orig(vertex_space_subscripts(i,1) + subscript_range_y + 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x + 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         -    orig(vertex_space_subscripts(i,1) + subscript_range_y - 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x + 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         -    orig(vertex_space_subscripts(i,1) + subscript_range_y + 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x - 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )  ...
                         +    orig(vertex_space_subscripts(i,1) + subscript_range_y - 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x - 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z    )) ...
                       .* matching_kernel_image ./ microns_per_voxel(1) ./ microns_per_voxel(2),'all' );

            %dyz
            vertex_derivatives(i,8)                           ...
                = sum((       orig(vertex_space_subscripts(i,1) + subscript_range_y + 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z + 1)  ...
                         -    orig(vertex_space_subscripts(i,1) + subscript_range_y - 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z + 1)  ...
                         -    orig(vertex_space_subscripts(i,1) + subscript_range_y + 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z - 1)  ...
                         +    orig(vertex_space_subscripts(i,1) + subscript_range_y - 1,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x    ,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z - 1)) ...
                       .* matching_kernel_image ./ microns_per_voxel(1) ./ microns_per_voxel(3),'all' );

            %dxz
            vertex_derivatives(i,9)                           ...
                = sum((       orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x + 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z + 1)  ...
                         -    orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x - 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z + 1)  ...
                         -    orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x + 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z - 1)  ...
                         +    orig(vertex_space_subscripts(i,1) + subscript_range_y    ,  ...
                                   vertex_space_subscripts(i,2) + subscript_range_x - 1,  ...
                                   vertex_space_subscripts(i,3) + subscript_range_z - 1)) ...
                       .* matching_kernel_image ./ microns_per_voxel(2) ./ microns_per_voxel(3),'all' );

        end

        fprintf('          '); toc(scale_time)
        fprintf('          Total Derivative Calculation '); toc(start_time)
    end
    
    vertex_derivatives = vertex_derivatives ...
                         ./ std_across_kernels ...
                         .* vertex_radii ;

end